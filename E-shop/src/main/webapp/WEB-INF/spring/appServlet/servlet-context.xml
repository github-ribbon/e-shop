<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
		
	<context:annotation-config/> 
	 
	 
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory --> 
	<resources mapping="/resources/**" location="/resources/" />
	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- 
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	-->
	
	
	<!-- MVC Internationalization -->	
	<beans:bean id="localeResolver"	class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<beans:property name="defaultLocale" value="pl" />
	</beans:bean>
 	
 	
	<beans:bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		<beans:property name="paramName" value="language" />
	</beans:bean>
 
	<beans:bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping">
		<beans:property name="interceptors">
		   <beans:list>
			<beans:ref bean="localeChangeInterceptor" />
		   </beans:list>
		</beans:property>
	</beans:bean> 
	
	<!-- Registers the messages.properties --> 
	<beans:bean id="messageSource"	class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basename" value="messages" />
	</beans:bean>
		
   	<interceptors>
   		<beans:ref bean="localeChangeInterceptor" />
   	</interceptors>
   
   	
   
	<!-- 
	<context:property-placeholder location="classpath:/mail.properties" />
   	-->
   
   	
	<context:component-scan base-package="com.company.eshop" />	
	
	<!-- 
	<jee:jndi-lookup id="mailSession" jndi-name="mail/eshop" resource-ref="true"></jee:jndi-lookup>
	<beans:bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="session" ref="mailSession"></beans:property>	
		
	</beans:bean>
	-->
	
	<!-- 
	<jee:jndi-lookup id="mailSession" jndi-name="java:jboss/mail/eshop" resource-ref="true"></jee:jndi-lookup>
	<beans:bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="session" ref="mailSession"></beans:property>	
		
	</beans:bean>
	-->
	
	
	<context:property-placeholder location="classpath:database.properties" />
	
	<!-- 
	
	
	<jee:jndi-lookup id="dataSource" jndi-name="jdbc/PostgreSQL" resource-ref="true" />
	
	-->
	
	
	<!--  
	<jee:jndi-lookup id="dataSource" jndi-name="java:jboss/datasources/PostgresDSlol" resource-ref="true" />
	-->	

	<beans:bean id="dataSource"
	class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="${jdbc.driverClassName}"></beans:property>
		<beans:property name="url"
	value="${jdbc.url}"></beans:property>
		<beans:property name="username" value="${jdbc.username}"></beans:property>
		<beans:property name="password" value="${jdbc.password}"></beans:property>
 	</beans:bean>
 
 
 
 	<beans:bean id="sessionFactory"
	class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
 	  <beans:property name="dataSource" ref="dataSource"></beans:property>
 	  <beans:property name="packagesToScan" value="com.company.ehop.domain"></beans:property>
 	  <beans:property name="hibernateProperties">
 	  	<beans:props>
 	  		<beans:prop key="dialect">org.hibernate.dialect.PostgreSQLDialect</beans:prop>
 	  	</beans:props>
 	  </beans:property>
 	</beans:bean>
  
    <tx:annotation-driven transaction-manager="transactionManager" />    
    <!-- <tx:jta-transaction-manager></tx:jta-transaction-manager>-->
    
    <beans:bean
	class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"> </beans:bean>
    
    <beans:bean id="jpaDialect"
	class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"></beans:bean>
    
    
     <beans:bean class="org.springframework.orm.jpa.JpaTransactionManager"
	id="transactionManager">
		<!--<beans:property name="transactionManagerName" value="java:jboss/TransactionManager"></beans:property>-->
	  <!-- 	<beans:property name="allowCustomIsolationLevels" value="true"></beans:property>-->
	  <beans:property name="entityManagerFactory" ref="entityManagerFactory"></beans:property>
    </beans:bean>    
 	
 	
	<beans:bean
	class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"></beans:bean>
	
	<beans:bean id="jpaVendorAdapter"
	class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">	
		<beans:property name="database" value="POSTGRESQL"></beans:property>
		<beans:property name="databasePlatform"
	value="org.hibernate.dialect.PostgreSQLDialect"></beans:property>
		<beans:property name="showSql" value="true"></beans:property>
		<beans:property name="generateDdl" value="true"></beans:property>
	</beans:bean>

	<beans:bean id="entityManagerFactory"
	class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
		<beans:property name="jpaDialect" ref="jpaDialect"></beans:property>
		<beans:property name="persistenceUnitName" value="E-shop"></beans:property>
		<beans:property name="packagesToScan" value="com.company.eshop"></beans:property>
		<beans:property name="jpaVendorAdapter" ref="jpaVendorAdapter"></beans:property>
		<beans:property name="loadTimeWeaver">
    		<beans:bean
	class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
  		</beans:property>
  	
	</beans:bean>
   
   
 
   <security:global-method-security
	pre-post-annotations="enabled"></security:global-method-security>
   
	<security:http pattern="/resources" security="none" />
	
	<security:http auto-config="true" use-expressions="true">
	
		 <security:remember-me key="45nx84nbd872hfd82hsd823hf"
	token-validity-seconds="864000" />
		
		<security:form-login login-page="/"
	authentication-failure-url="/?failure"
	authentication-success-handler-ref="authService" />
		
		<security:access-denied-handler
	error-page="/denied" />
		
		<security:logout invalidate-session="true"
	logout-success-url="/?logged_out" logout-url="/logout" />
	
	</security:http>
	
	<security:authentication-manager>
	     <security:authentication-provider
	user-service-ref="authService">
	      <security:password-encoder ref="passwordEncoder" /> 
	     </security:authentication-provider>
	</security:authentication-manager>
	  	
  	<!-- Use a Md5 encoder since the user's passwords are stored as Md5 in the database -->
	<beans:bean
	class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"
	id="passwordEncoder"></beans:bean>
	 	
	 	
</beans:beans>
